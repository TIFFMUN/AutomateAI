services:
  # Frontend React App
  frontend:
    build: ./frontend
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - REACT_APP_ENV=development
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - automate-ai-network

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/sap_onboarding
      - PERFORMANCE_DATABASE_URL=postgresql://postgres:password123@postgres_performance:5432/performance_testing
    depends_on:
      - postgres
      - postgres_performance
    networks:
      - automate-ai-network

  # PostgreSQL Database (Main)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=sap_onboarding
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - automate-ai-network

  # PostgreSQL Database (Performance Testing)
  postgres_performance:
    image: postgres:15
    environment:
      - POSTGRES_DB=performance_testing
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    ports:
      - "5433:5432"
    volumes:
      - postgres_performance_data:/var/lib/postgresql/data
    networks:
      - automate-ai-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - automate-ai-network

volumes:
  postgres_data:
  postgres_performance_data:

networks:
  automate-ai-network:
    driver: bridge
